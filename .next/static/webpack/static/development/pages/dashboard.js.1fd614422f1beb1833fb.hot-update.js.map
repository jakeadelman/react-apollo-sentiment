{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.1fd614422f1beb1833fb.hot-update.js","sources":["webpack:///./components/Categories/CategoryList.js"],"sourcesContent":["import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport { inject } from \"mobx-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport \"./cats.css\";\nimport { transition } from \"../shared/helpers\";\n\nconst SidebarCategoryList = inject(\"store\")(\n  observer(({ store }) => {\n    const [activeCurrency, setCurrency] = useState(store.currency);\n    // console.log(currency);\n    // const clicked = () => {\n    //   if (store.currency == \"bitcoin\") {\n    //     store.currency = \"ethereum\";\n    //   } else if (store.currency == \"ethereum\") {\n    //     store.currency = \"bitcoin\";\n    //   }\n    // };\n    const currencyClicked = e => {\n      console.log(e.target.value);\n      // if (e.target.value !== currency) {\n      store.currency = e.target.value;\n      setCurrency(e.target.value);\n      // }\n    };\n\n    return (\n      <Query query={allCurrencies}>\n        {({ loading, error, data }) => {\n          if (error) return <div>no data loaded</div>;\n          if (loading) return <div>Loading</div>;\n          console.log(data.allCurrencies);\n          return (\n            <CategoryList>\n              {data.allCurrencies.map(currency => {\n                return (\n                  <Item\n                    className={\n                      activeCurrency == currency.name ? \"active-currency\" : \"\"\n                    }\n                  >\n                    <UnstyledButton\n                      value={currency.name}\n                      onClick={e => currencyClicked(e)}\n                    >\n                      {currency.name.charAt(0).toUpperCase() +\n                        currency.name.slice(1)}\n                    </UnstyledButton>\n                  </Item>\n                );\n              })}\n            </CategoryList>\n          );\n        }}\n      </Query>\n    );\n  })\n);\n\nconst allCurrencies = gql`\n  query AllCurrencies {\n    allCurrencies {\n      id\n      name\n      ticker\n    }\n  }\n`;\n\nconst UnstyledButton = styled.button`\n  ${transition}\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: 0 !important;\n`;\n// const SidebarCategoryList = () => (\n\n// );\n\nexport default SidebarCategoryList;\n\nconst CategoryList = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled.div`\n  ${transition}\n  padding: 4px 12px;\n  font-size: 15px;\n  text-decoration: none;\n  color: ${props => props.theme.normalText};\n\n  ::after {\n    left: -1px;\n    top: 0;\n    bottom: 0;\n    border-left: 3px solid ${props => props.theme.accent};\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAGA;AAGA;AAGA;AAUA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAMA;AAAA;;;;A","sourceRoot":""}
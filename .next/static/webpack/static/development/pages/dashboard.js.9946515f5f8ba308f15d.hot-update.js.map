{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.9946515f5f8ba308f15d.hot-update.js","sources":["webpack:///./stores/store.js"],"sourcesContent":["import { action, observable } from \"mobx\";\nimport { useStaticRendering } from \"mobx-react\";\nimport { create, persist } from \"mobx-persist\";\nimport { createContext } from \"react\";\n\nconst isServer = !process.browser;\nuseStaticRendering(isServer);\n\nexport class Store {\n  @observable lastUpdate = 0;\n  @persist @observable light = true;\n  @persist @observable isAuth = false;\n  @persist @observable currency = \"bitcoin\";\n  @persist @observable hoursBack = 24;\n\n  //   constructor(isServer, initialData = {}) {\n  //     this.lastUpdate =\n  //       initialData.lastUpdate != null ? initialData.lastUpdate : Date.now();\n  //     this.light = !!initialData.light;\n  //   }\n\n  //   @action start = () => {\n  //     this.timer = setInterval(() => {\n  //       this.lastUpdate = Date.now();\n  //       this.light = true;\n  //     }, 1000);\n  //   };\n\n  //   stop = () => clearInterval(this.timer);\n}\n\nlet store = null;\nexport const hydrate = create();\nexport const StoreContext = createContext(new Store());\n\nexport function initializeStore(initialData) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return new Store(isServer, initialData);\n  }\n  if (store === null) {\n    store = new Store(isServer, initialData);\n  }\n\n  hydrate(\"store\", store).then(() => {\n    console.log(\"someStore has been hydrated\");\n  });\n\n  return store;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}